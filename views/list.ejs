<!doctype html>
<html>
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous">

    <title>Hello, world!</title>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item active">
                <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Write</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">임시</a>
            </li>
        </ul>
    </div>
</nav>

<!--서버에서 가져온 할일 리스트-->
<!--EJS 라이브러리 사용. 터미널에서 ejs 설치 /list로 접속(GET요청)하면 데이터들로 꾸민 HTML을 보여줄 것임.-->
<!-- list.html 을 list.ejs로 이름 바꾸기(그럼 ejs 문법 이용해 서버데이터 삽입 가능) 대체품 : react, vue,... -->

<!-- <h4>할일 제목 : <%= posts[0].제목 %></h4> -->
<!-- <p>할일 마감 날짜 : <%= posts[0].날짜 %></p> -->
<!-- <h4>할일 제목 : <%= posts[1].제목 %></h4> -->
<!-- <p>할일 마감 날짜 : <%= posts[1].날짜 %></p> -->

<h4 class="ml-2 my-3">서버에서 가져온 할일 리스트</h4>

<ul class="list-group">
    <% for(var i = 0; i<posts.length; i++){ %>
        <li class="list-group-item">
          <p>글번호 : <%= posts[i]._id %></p>
          <h4>할일 제목 : <%= posts[i].제목 %></h4>
          <p>할일 마감 날짜 : <%= posts[i].날짜 %></p>
          <a href="/detail/<%= posts[i]._id %>"><button class="btn btn-success" data-id="<%= posts[i]._id %>">상세보기</button></a>
          <button type="button" class="btn btn-info">수정하기</button>
          <button class="btn btn-danger" data-id="<%= posts[i]._id %>">삭제하기</button>
        </li>
    <% } %>
</ul>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

/*

글 목록마다 삭제버튼 만들기

1. 서버에 해당 글 삭제 요청을 함 (DELETE 요청)
  - DELETE요청은 HTML에서는 불가능 (form method=get,post 만 가능)
  - method-override 라이브러리 이용하는 방법과 (node에서 쓸 수 있는.. form에서 DELETE요청 가능해짐)
  - javascript AJAX를 이용하는 방법이 있다 (언젠간 쓸거니깐 이걸로..!)
    Ajax는 뭘까? : 새로고침 없이 서버에 요청하는걸 도와주는 JS 문법

    Ajax 기본 문법
    $.ajax({
            method : 'DELETE',
            url : '요청할경로',
            data : '요청과 함께 보낼 데이터'
        })

2. DELETE 요청하기 전 더러운 HTML 예쁘게 꾸미기
3. Ajax로 DELETE 요청
4. server.js 로 가서.. 서버는 /delete 경로로 DELETE 요청 처리하는 코드 작성해놓으면 되겠네

*/

/*
    X번 버튼 누르면 X번 게시물이 삭제되어야함
    1. 버튼마다 번호달기 (html소스코드 상에..)
    2. 클릭한 버튼의 id를 파악 (ajax의 data)
*/
                             // 내가 누른 버튼에 숨겨진 data-id 값을 가져와주셈~
    $('.btn-danger').click(function(e){
        var 글번호 = e.target.dataset.id;  // 내가지금누른요소에 숨겨져있는 data-id를 가져와주세요
                 // e.target : 내가 누른 요소
                 // dataset.id : data-id

        var 지금누른거 = $(this);    // this : 지금 이벤트 동작하는곳

        // 서버에 새로고침없이 /delete 경로로 DELETE 요청을 할거에요~ 123이라는 데이터도 같이 보낼꺼에요
        $.ajax({
            method : 'DELETE',
            url : '/delete',    // 요청할 경로 작성
            data : {_id : 글번호}  // 요청보낼 때 삭제할 게시물 번호를 함께 전송
        }).done(function(결과){   // 요청이 성공하면 요걸 실행해주세요~
            // 삭제버튼을 누른 <li> 요소를 제거해주세요
            alert('삭제되었습니다~!')
            지금누른거.parent('li').fadeOut();

        }).fail(function(xhr, textStatus, errorThrown){     // 실패시 실행
            console.log(xhr, textStatus, errorThrown);
            // textStatus : 응답코드 출력. 왜실패했는지
            // errorThrown : 에러메세지 출럭
        });
    });

</script>


<!-- Optional JavaScript; choose one of the two! -->

<!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-fQybjgWLrvvRgtW6bFlB7jaZrFsaBXjsOMm/tB9LTS58ONXgqbR9W8oWht/amnpF" crossorigin="anonymous"></script>

<!-- Option 2: Separate Popper and Bootstrap JS -->
<!--
<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.min.js" integrity="sha384-VHvPCCyXqtD5DqJeNxl2dtTyhF78xXNXdkwX1CZeRusQfRKp+tA7hAShOK/B/fQ2" crossorigin="anonymous"></script>
-->
</body>
</html>